Q1.


i) DisplayElement.java
package assignment1;

public interface DisplayElement{
public void display();
}


ii) CurrentConditionsDisplay.java
package assignment1;
import java.util.Observer;
import java.util.Observable;

public class CurrentConditionsDisplay implements Observer, DisplayElement {
	Observable observable;
	private float temperature;
	private float humidity;
	private float pressure;

	public CurrentConditionsDisplay(WeatherData weatherData){
	this.observable=(Observable) weatherData;
	weatherData.addObserver((java.util.Observer) this);
	}

	public void update(Observable obs, Object arg){
		if(obs instanceof WeatherData){
			WeatherData weatherData=(WeatherData)obs;
			this.temperature=weatherData.getTemperature();
			this.humidity=weatherData.getHumidity();
			this.pressure=weatherData.getPressure();
			display();
		}
	}
		public void display(){
		System.out.println("Current conditions:"+temperature
		+"F degrees and"+humidity+"% humidity"+ " Pressure:"+pressure+"f");
		}
}

iii) Observer.java

package assignment1;

public interface Observer{
public void update (float temp, float humidity, float pressure);
}


iv) WeatherData.java
package assignment1;
import java.util.Observer;
import java.util.Observable;

public class WeatherData extends Observable  {
	private float temperature; 
	private float humidity;
	private float pressure;
	public WeatherData(){}
	public void measurementChanged(){
		setChanged();
		notifyObservers();
	}
	public void setMeasurements(float temperature,float humidity,float pressure){
		this.temperature=temperature;
		this.humidity=humidity;
		this.pressure=pressure;
		measurementChanged();
	}
	public float getTemperature(){
		return temperature;
	}
	public float getHumidity(){
		return humidity;
	}
	public float getPressure(){
		return pressure;
	}
}

v) WeatherStation.java

package assignment1;

public class WeatherStation {

	public static void main(String[] args) {
		WeatherData weatherData=new WeatherData();
		
		CurrentConditionsDisplay currentDisplay=new CurrentConditionsDisplay(weatherData);
		weatherData.setMeasurements(80,65,30.4f);
		weatherData.setMeasurements(82,70,29.2f);
		weatherData.setMeasurements(78,90,29.2f);

	}

}



Q2.


import pandas as pd
import numpy as np

dataset = pd.read_csv("iris.csv")
dataset

dataset.info()
from sklearn.preprocessing import LabelEncoder
l1 = LabelEncoder()
dataset['New_Category']=l1.fit_transform(dataset['Species'])
dataset



Q3.


<html>
<head>
  <script>
    function validateform(){  
      var email = document.getElementById("email").value;
      var password = document.getElementById("psw").value;
      if (!(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email)))
          alert("You have entered an invalid email address!");
    }
    </script>
</head>
<body>
  <form name="myform" onsubmit="return validateform()">
      <h1>Please fill in this form to Login.</h1>
     
      Email :
      <input type="text" autocomplete="off" placeholder="Enter Email" name="email" id="email" required><br>
      Password :
      <input type="password" autocomplete="off" placeholder="Enter Password" name="psw" id="psw" required><br>
      <button type="submit" class="registerbtn">Register</button>
  </form>
</body>
</html>
