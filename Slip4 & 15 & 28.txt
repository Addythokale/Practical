Q1.


i) PizzaTest.java
package Assignment;

public class PizzaTest {

public static void main(String[] args) {
//first order
PizzaStorenyStore = new NYPizzaStore();
Pizza pizza = nyStore.orderPizza("Cheese");
System.out.println("Bharat ordered a "+pizza.getName()+"\nbn");

System.out.println("**********------------*************----------*********"+"\n");

//Second order
PizzaStorechicagoStore = new ChicagoPizzaStore();
pizza = chicagoStore.orderPizza("Cheese");
System.out.println("Pratiksha ordered a "+pizza.getName()+"\n");
}

}




ii) PizzaStore.java

package Assignment;

public abstract class PizzaStore {
	
	public Pizza orderPizza(String type)
	{
		Pizza pizza;
		pizza = createPizza(type);
		pizza.prepare();
		pizza.bake();
		pizza.cut();
		pizza.box();
		return pizza;
	}
	protected abstract Pizza createPizza(String type);

}



iii)Pizza.java

package Assignment;

import java.util.*;
public class Pizza {
	
	String name;
	String dough;
	String sauce;
	ArrayList toppings = new ArrayList();
	
	void prepare()
	{
		System.out.println("Preparing" +name);
		System.out.println("Tossing dough...");
		System.out.println("Adding Souce...");
		System.out.println("Adding toppings...");
		
		for(int i=0;i<toppings.size();i++)
		{
			System.out.println(""+toppings.get(i));
		}
	}
	
	void bake()
	{
		System.out.println("Bake for 25 mins...");
	}
	
	void cut()
	{
		System.out.println("Cutting into diagonal slices ...");
	}
	
	void box()
	{
		System.out.println("Place into Pizzastore box");
	}
	public String getName()
	{
		return name;
	}

}


iv) ChicagoPizzaStore.java

package Assignment;

public class ChicagoPizzaStore extends PizzaStore{
	
	public Pizza createPizza(String item)
	{
		if(item.equals("Cheese"))
		{
			return new ChicagoStyleCheesePizza();
		}
		else return null;
	}

}



v) ChicagoStyleCheesePizza.java

package Assignment;

public class ChicagoStyleCheesePizza extends Pizza{
	
	public ChicagoStyleCheesePizza() 
	{
		name = "Chicago style Deep Dish Cheese Pizza";
		dough = "Extra Thick Crust Dough";
		sauce = "Plum Tomato Sauce";
		
		toppings.add("Shreddded Mazzarella Cheese..");
	}
	
	void cut()
	{
		System.out.println("***Cutting the pizza into square slices***");
	}

}


vi) NYPizzaStore.java

package Assignment;

public class NYPizzaStore extends PizzaStore{
	
	public Pizza createPizza(String item)
	{
		if(item.equals("Cheese"))
		{
			return new NYStyleCheesePizza();
		}
		else return null;
	}

}


vii) NYStyleCheesePizza.java

package Assignment;

public class NYStyleCheesePizza extends Pizza{
	
	public NYStyleCheesePizza() 
	{
		name = "Chicago style Deep Dish Cheese Pizza";
		dough = "Extra Thick Crust Dough";
		sauce = "Plum Tomato Sauce";
		
		toppings.add("Shreddded Mazzarella Cheese..");
	}
	
	void cut()
	{
		System.out.println("***Cutting the pizza into square slices***");
	}

}



Q2.


import numpy as np
import matplotlib.pyplot as plt

np.random.seed(0)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)

from sklearn.metrics import mean_squared_error
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

plt.scatter(X_train, y_train, label="Training Data")
plt.plot(X_test, y_pred, color='red', linewidth=3, label="Regression Line")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.title("Linear Regression for House Price Prediction")
plt.show()



Q3.

var http = require('http');
var uc = require('upper-case');
http.createServer(function (req, res){
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(uc.upperCase("hello world..!!!"));
    res.end();
}).listen(8080);
