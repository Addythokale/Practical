Q1.

i) LowerCaseInputStream.java

package Assignment2;

import java.io.*;
public class LowerCaseInputStream extends FilterInputStream
{
public LowerCaseInputStream(InputStream in)
{
super(in);
}
public int read() throws IOException
{
int c = super.read();
return (c == -1 ?c : Character.toLowerCase((char)c));
}
public int read(byte[] b, int offset, int len) throws IOException {
int result = super.read(b, offset, len);
for (int i = offset; i<offset+result; i++) {
b[i] = (byte)Character.toLowerCase((char)b[i]);
}
return result;
}
}

ii) InputTest.java
package Assignment2;

import java.io.*;
public class InputTest {
public static void main(String[] args) throws IOException {
int c;
try {
InputStream in =new LowerCaseInputStream(new BufferedInputStream(new FileInputStream("D:/demo/a.txt")));
while((c = in.read()) >= 0) {
System.out.print((char)c);
}
in.close();
} catch (IOException e) {
e.printStackTrace();
}
}
}




Q2.

import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()
X = iris.data
y = iris.target
target_names = iris.target_names

# Create a scatter plot
plt.figure(figsize=(8, 6))

colors = ['navy', 'turquoise', 'darkorange']
lw = 2

for color, i, target_name in zip(colors, [0, 1, 2], target_names):
    plt.scatter(X[y == i, 0], X[y == i, 1], color=color, alpha=.8, lw=lw,
                label=target_name)
plt.legend(loc='best', shadow=False, scatterpoints=1)
plt.title('Scatter plot of Iris dataset')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')

plt.show()


Q3.

<html>
<head>
    <script type="text/javascript">
        function validateStudent(){
            var regName = /^[a-zA-z]+[a-zA-Z]+$/;
            var fname = document.getElementById('fsname').value;
            var lname = document.getElementById('lsname').value;
            var age = document.getElementById('age').value;
            var phone = document.getElementById('phone').value;
            
            if(age<18 || age>50)
                alert("student age must be 18 to 50");
            if(!regName.test(fname))
                alert("invalid name");
            if(!regName.test(lname))
                alert("invalid name");
        }
    </script>
</head>
<body>
    <form>
        <h1>Student Form :</h1>
        student first name :
        <input type="text" name="fsname" id="fsname"><br>
        student last name :
        <input type="text" name="lname" id="lsname"><br>
        student age :
        <input type="text" name="age" id="age"><br>
        student mobile :
        <input type="text" name="phone" id="phone"><br>
        <input type="button" value="validate" onclick="validateStudent()">
    </form>
</body>
</html> 
